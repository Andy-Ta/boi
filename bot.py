from discord.ext import commands
import argparse
import random

description = '''A controversial bot'''
bot = commands.Bot(command_prefix='boi ', description=description)
parser = argparse.ArgumentParser(description=description)


@bot.event
async def on_ready():
    print('Logged in as ')
    print(bot.user.name)
    print(bot.user.id)
    print('------')


@bot.command(pass_context=True, description='Decides on what to eat.')
async def eat(ctx):
    foods = ['sushi', 'mcdz', 'shawarma', 'italian', 'mandarin', 'greek', 'tacos']
    await ctx.send('Y\'all should get some ' + random.choice(foods))


@bot.command(pass_context=True, description='Tells you whether you can sushi or not.')
async def sushi(ctx):
    await ctx.send('Hell yeah')


@bot.command(pass_context=True, description='For when you wanna settle the score some other way')
async def choose(ctx, *choices: str):
    await ctx.send(random.choice(choices))


# Salope Commands
@bot.group(pass_context=True)
async def salope(ctx):
    """Says if a user is a salope."""
    if ctx.invoked_subcommand is None:
        await ctx.send('No, {0.subcommand_passed} is not a salope.'.format(ctx))


@salope.command(pass_context=True, name='riad')
async def _riad(ctx):
    """Is Riad a salope?"""
    await ctx.send('Yes, Riad is a salope.')


@salope.command(pass_context=True, name='rosa')
async def _rosa(ctx):
    """Is Rosa a salope?"""
    await ctx.send('Yes, Rosa is a salope.')
# End Salope Commands


parser.add_argument('token', type=str, help='Required bot token generated by Discord.')
bot.run(parser.parse_args().token)
